#include <stdio.h>
#include <conio.h>
#include <string.h>

struct Video
{
	char CompanyName[20];
	int ReleaseYear;
	char CardName[8];
	int NumberModel;
};

int Menu(void);
int ScanArray(struct Video[20]);
void PrintArray(int, struct Video[20]);
int AddInfo(int, struct Video[20]);
int DeleteInfo(int, struct Video[20]);
void DeleteLine(int *, struct Video[20], int *);
void SaveDB(int, struct Video[20]);
int OpenDB(struct Video[20]);


void main(void){
	int N, line = 0;
	struct Video VideoCard[20];
	while(N = Menu())
		switch(N)
		{
			case '0':
				exit(1);
			case '1':
				line = ScanArray(VideoCard);
				break;
			case '2':
				PrintArray(line, VideoCard);
				break;
			case '3':
				line = AddInfo(line, VideoCard);
				break;
			case '4':
				line = DeleteInfo(line, VideoCard);
				break;
			case '5':
				SaveDB(line, VideoCard);
				break;
			case '6':
				line = OpenDB(VideoCard);
				break;
				}
	system("pause");
}
int Menu(void){
	int N = 0;
	system("cls");
	printf("--------MENU-------\n"
		   "[1]SCAN_INFO    [1]\n"
		   "[2]PRINT_INFO   [2]\n"
		   "[3]ADD_STRING   [3]\n"
		   "[4]DELETE_STRING[4]\n"
		   "[5]SAVE_IN_DB   [5]\n"
		   "[6]OPEN_FROM_DB [6]\n"
		   "[0]    EXIT     [0]\n"
		   ">");
	N = getch();
	return N;
}
int ScanArray(struct Video VideoCard[20]){
	int i, line = 1;
	system("cls");
	printf("->[1]SCAN_INFO\n"
		   "  [0]EXIT\n");
	printf("NUMBER OF ELEMTS = ");
	scanf("%d", &line);
	if(line == 0)
    	main();
	for(i = 0; i < line; i++)
	{
			printf("\nVideo card[%d]\n", i+1);
			printf("CompanyName = ");
			scanf("%s", &VideoCard[i].CompanyName);
			printf("ReleaseYear = ");
			scanf("%d", &VideoCard[i].ReleaseYear);
			printf("CardName = ");
			scanf("%s", &VideoCard[i].CardName);
			printf("NumberModel = ");
			scanf("%d", &VideoCard[i].NumberModel);
		}
	return line;
}
void PrintArray(int line, struct Video VideoCard[20]){
	int i;
	system("cls");
	printf("->[2]PRINT_INFO\n"
		   "  [ANY]EXIT\n"
		   "\n──────────────────────────────────────────────\n"
		   "|CompanyName|ReleaseYear|CardName|NumberModel|\n"
	       "────────────┴───────────┴────────┴────────────\n");

	for(i = 0; i < line; i++)
	{
		printf("|%11s|%-11d|%-8s|%11d|\n", VideoCard[i].CompanyName, VideoCard[i].ReleaseYear, VideoCard[i].CardName, VideoCard[i].NumberModel);
        printf("────────────┴───────────┴────────┴────────────\n");
	}
	getch();
}
int AddInfo(int line, struct Video VideoCard[20]){
	system("cls");
	printf("->[3]ADD_STRING\n"
		   "\nCompany Name = ");
	scanf("%s", &VideoCard[line].CompanyName);
	printf("Release Year = ");
	scanf("%d", &VideoCard[line].ReleaseYear);
	printf("Card Name = ");
	scanf("%s", &VideoCard[line].CardName);
	printf("Number Model = ");
	scanf("%d", &VideoCard[line].NumberModel);
	line++;
	return line;
}
int DeleteInfo(int line, struct Video VideoCard[20]){
	int point, i, KeyInt;
	char KeyWord[20];
	system("cls");
	printf("->[4]DELETE_STRING\n"
		   "  [0]EXIT\n"
		   "\nSELECT_A_CATEGORY\n"
		   "[1]Company Name\n"
		   "[2]Release Year\n"
		   "[3]Card Name\n"
		   "[4]Number Model\n"
		   "[5]Number String\n"
		   ">");
	point = getch();
	system("cls");
		switch(point){
				case '1':
				{
				scanf("%19s", KeyWord);
				for(i = 0 ; i < line; i++)
					if(strcmp(VideoCard[i].CompanyName, KeyWord) == 0)
						DeleteLine(&line, VideoCard, &i);
				}
				break;
				case '2':
				{
				scanf("%d", &KeyInt);
				for(i = 0 ; i < line; i++)
					if(VideoCard[i].ReleaseYear == KeyInt)
						DeleteLine(&line, VideoCard, &i);
				}
				break;
				case '3':
				{
				scanf("%19s", KeyWord);
				for(i = 0 ; i < line; i++)
					if(strcmp(VideoCard[i].CardName, KeyWord) == 0)
						DeleteLine(&line, VideoCard, &i);
				}
				break;
				case '4':
				{
					scanf("%d", &KeyInt);
				for(i = 0 ; i < line; i++)
					if(VideoCard[i].NumberModel == KeyInt)
						DeleteLine(&line, VideoCard, &i);
				}
				break;
				case '5':
				{
					scanf("%d", &KeyInt);
                    --KeyInt;
					DeleteLine(&line, VideoCard, &KeyInt);
				}
				break;
		}
	return line;
}

void DeleteLine(int *line, struct Video VideoCard[20], int *i){
	for(; *i < *line; *i += 1)
	{
	strcpy(VideoCard[*i].CompanyName, VideoCard[*i+1].CompanyName);
	VideoCard[*i].ReleaseYear = VideoCard[*i+1].ReleaseYear;
	strcpy(VideoCard[*i].CardName, VideoCard[*i+1].CardName);
	VideoCard[*i].NumberModel = VideoCard[*i+1].NumberModel;
	}
	*line -= 1;
	*i = -1;
}

void SaveDB(int line, struct Video VideoCard[20])
{
  FILE *F;
  int i;

  if ((F = fopen("DBVideoCards.dat", "wb")) == NULL)
  {
	fprintf(stderr, "Невозможно открыть для записи файл 'DBVideoCards.dat'\n");
    return;
  }

  for (i = 0; i < line; i++)
	fwrite(VideoCard+i, sizeof(struct Video), 1, F);

  fclose(F);
}

int OpenDB(struct Video VideoCard[20])
{
  FILE *F;
  int i, lSize, line;

  if ((F = fopen("DBVideoCards.dat", "rb")) == NULL)
  {
	fprintf(stderr, "Невозможно открыть для записи файл 'DBVideoCards.dat'\n");
    return;
  }
  fseek(F, 0, SEEK_END);
  lSize = ftell(F);
  line = lSize / sizeof(struct Video);
  rewind(F);


  for (i = 0; i < line; i++)
	fread(VideoCard+i, sizeof(struct Video), 1, F);

  fclose(F);
  return line;
}
